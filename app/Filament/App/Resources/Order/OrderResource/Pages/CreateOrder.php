<?php

namespace App\Filament\App\Resources\Order\OrderResource\Pages;

use App\Filament\App\Resources\Order\OrderResource;
use App\Filament\Common\Schemas\Order\HasOrderCreationFormSchema;
use App\Livewire\Filament\OrderPreviewTable;
use App\Models\Product\Product;
use App\Models\Project\Project;
use App\Models\Subscription\Plan;
use App\Services\MoneyService\Money;
use Filament\Actions;
use Filament\Forms\Components\Livewire;
use Filament\Forms\Components\Placeholder;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Wizard;
use Filament\Forms\Form;
use Filament\Forms\Get;
use Filament\Resources\Pages\CreateRecord;
use Filament\Support\Enums\Alignment;
use Filament\Support\Enums\IconPosition;
use Filament\Support\Enums\IconSize;
use Illuminate\Support\Facades\Blade;
use Illuminate\Support\HtmlString;
use JaOcero\RadioDeck\Forms\Components\RadioDeck;

class CreateOrder extends CreateRecord
{
    use CreateRecord\Concerns\HasWizard,HasOrderCreationFormSchema;
    protected static string $resource = OrderResource::class;
    public $products;
    public $projects;

    public function mount(): void
    {
        parent::mount(); // TODO: Change the autogenerated stub
        $this->products = Product::all();
        $this->projects = Project::all();
    }


    public function form(Form $form): Form
    {
        return parent::form($form)
            ->schema([

                Wizard::make([
                    Wizard\Step::make('Choose Type')
                        ->columns()
                        //->afterValidation(fn() => dd($this->data))
                        ->schema($this->getBaseTypeSchema()),

                    Wizard\Step::make('Choose Product')
                        ->columns()
                        ->schema(fn(Get $get) => $this->getProductSchema($get)),

                    Wizard\Step::make('Config')
                        ->schema($this->getConfigurationFormSchema()),
                    Wizard\Step::make('Billing')
                        ->schema($this->getPlaceOrderFormSchema()),
                ])->columnSpanFull()
                    //->skippable()
                    ->submitAction(new HtmlString(Blade::render(<<<BLADE
    <x-filament::button
        type="submit"
        size="sm"
    >
        Confirm & Place Order
    </x-filament::button>
BLADE)))


            ]);
    }




}
